import { MaterialWindow, MaterialWindowAdapter, NavigationDrawer, Dialog, MaterialText, SegmentedButton } from "../material-components/material.slint";
import { MainWindowAdapter } from "./main_window_adapter.slint";
import { FilledIcons, OutlinedIcons } from "./icons.slint";
import { Sidebar } from "./components/sidebar.slint";
import { SpaceView } from "views/space_view.slint";
import { DownloadView, VideoInfo } from "views/download_view.slint";
import { SettingsView } from "views/settings_view.slint";
import { Button } from "std-widgets.slint";
import { TextField } from "../material-components/ui/components/text_field.slint";
import { QueryCardInfo } from "./modules.slint";
import { ListItem } from "./components/task_list.slint";

export component MainWindow inherits MaterialWindow {
    private property <int> crate_task_view_index;
    // Download page -> Query view
    private property <bool> query_is_info_showing;
    private property <bool> query_is_querying;
    private property <QueryCardInfo> query_card;
    callback query_bili_info(int, string);
    callback query_bili_info_finish(QueryCardInfo);
    query_bili_info_finish(info) => {
        query_card = info;
        query_is_querying = false;
        query_is_info_showing = true;
    }

    // Download page -> Editor view
    in-out property <bool> is_include_parts: true;
    in-out property <bool> is_creating;
    in-out property <[ListItem]> task_item_list: [];
    callback add_to_temp_list();
    callback add_to_temp_list_finish([ListItem]);
    callback add_to_create();
    add_to_temp_list_finish(list) => {
        task_item_list = list;
        crate_task_view_index = 1;
    }

    callback switch_watcher(bool) -> bool;
    private property <bool> settings-enable-watcher;

    tab-index: 0;
    title: "TypeMusic";
    preferred-width: 800px;
    preferred-height: 600px;
    background: MainWindowAdapter.background;
    default-font-family: "Roboto";

    property <int> tab-index;

    HorizontalLayout {
        Sidebar {
            current_item <=> tab-index;
        }
        
        // Switch Tabs
        if tab-index == 0 : DownloadView {
            crate_task_view_index <=> root.crate_task_view_index;

            query_is_info_showing <=> root.query_is_info_showing;
            query_is_querying <=> root.query_is_querying;
            query_card: root.query_card;
            query_info(queryType, input) => {query_bili_info(queryType, input)}

            is_include_parts <=> root.is_include_parts;
            is_creating <=> root.is_creating;
            task_item_list: root.task_item_list;
            add_to_temp_list => {root.add_to_temp_list()}
            add_to_create => {root.add_to_create()}
        }
        if tab-index == 1: SpaceView{}
        if tab-index == 2: SettingsView {
            enable-watcher <=> settings-enable-watcher;
            settingsChanged => {
                switch_watcher(settings-enable-watcher);
            }
        }
    }

    
    dialog := Dialog {
        width: 800px;
        height: 600px;
        title: "Add Task";
        default_action_text: "Submit";
        actions: ["Cancel"];
        // close-policy: no-auto-close;

        VerticalLayout {

            MaterialText {text: "select a type of your query";}
            SegmentedButton {
                items: [
                    {text: "BVID",},
                    {text: "AVID",}
                ];
            }
            TextField {
                // text <=> userInput;
                label: "BVID";
                vertical-stretch: 0;
            }
        }
        default_action_clicked => {
            dialog.close();
        }
        action_clicked(index) => {
            self.close();
        }
    }
}