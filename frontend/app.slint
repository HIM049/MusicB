import { MaterialWindow, MaterialWindowAdapter, NavigationDrawer, Dialog, MaterialText, SegmentedButton } from "../material-components/material.slint";
import { MainWindowAdapter } from "./main_window_adapter.slint";
import { FilledIcons, OutlinedIcons } from "./icons.slint";
import { Sidebar } from "./components/sidebar.slint";
import { SpaceView } from "views/space_view.slint";
import { DownloadView, VideoInfo } from "views/download_view.slint";
import { SettingsView } from "views/settings_view.slint";
import { Button } from "std-widgets.slint";
import { TextField } from "../material-components/ui/components/text_field.slint";

export component MainWindow inherits MaterialWindow {
    callback query_bili_info(int, string);
    callback switch_watcher(bool) -> bool;
    private property <bool> settings-enable-watcher;
    private property <string> bvid;
    in property <bool> showInfo;
    in property <string> videoTitle;
    in property <VideoInfo> videoInfo;
    in property <image> inputImage;

    title: "TypeMusic";
    preferred-width: 800px;
    preferred-height: 600px;
    background: MainWindowAdapter.background;
    default-font-family: "Roboto";

    property <int> tab-index;

    HorizontalLayout {
        Sidebar {
            current_item <=> tab-index;
        }
        
        // Switch Tabs
        if tab-index == 0: DownloadView {
            userInput <=> bvid;
            isShowInfo: showInfo;
            videoInfo: videoInfo;
            videoImage: inputImage;

            query_info(queryType, input) => {query_bili_info(queryType, input)}
        }
        if tab-index == 1: SpaceView{}
        if tab-index == 2: SettingsView {
            enable-watcher <=> settings-enable-watcher;
            settingsChanged => {
                switch_watcher(settings-enable-watcher);
            }
        }
    }

    
    dialog := Dialog {
        width: 800px;
        height: 600px;
        title: "Add Task";
        default_action_text: "Submit";
        actions: ["Cancel"];
        // close-policy: no-auto-close;

        VerticalLayout {

            MaterialText {text: "select a type of your query";}
            SegmentedButton {
                items: [
                    {text: "BVID",},
                    {text: "AVID",}
                ];
            }
            TextField {
                // text <=> userInput;
                label: "BVID";
                vertical-stretch: 0;
            }
        }
        default_action_clicked => {
            dialog.close();
        }
        action_clicked(index) => {
            self.close();
        }

    }


}