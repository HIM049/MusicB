import { FilledIcons } from "../../icons.slint";
import { FrameViewVertical } from "../../components/frame_view.slint";
import { MaterialText, FilledCard, TextField, FilledButton, TextButton, FloatingActionButton } from "../../../material-components/material.slint";
import { CreateTaskQuery } from "../../views/download_views/create_task_query.slint";
import { CreateTaskEditor } from "../../views/download_views/create_task_editor.slint";

struct VideoInfo {
    Title: string,
    Bvid: string,
    Cid: int,
    Cover: image,
    Author: string,
    Count: int,
    Tname: string,
    Publish: int,
    Describe: string,
}

struct CardInfo {
    Title: string,
    Bvid: string,
    Cover: image,
    Author: string,
    Count: int,
}

export component CreateTaskView {
    // Status
    private property <bool> isShowingInfo;
    private property <bool> isQuerying;
    private property <string> userInput;
    private property <CardInfo> CardInfo;

    private property <int> index: 1;
    
    callback query_info(int, string);
    callback query_finished(CardInfo);
    callback add_to_list();
    callback leading_clicked(); // back button

    width: 100%;
    height: 100%;

    FrameViewVertical {
        title: "Create Download Task";
        leading-icon: FilledIcons.arrow_back;
        leading_clicked => {leading_clicked()}

        if index == 1 : HorizontalLayout {
            padding-left: 15px;
            TextButton {
                text: "Cancel";
                icon: FilledIcons.undo;
                clicked => {index = 0}
            }
            Rectangle {}
        }

        if index == 0 : CreateTaskQuery {
            query_info(queryType, input) => {query_info(queryType, input)}
        }

        if index == 1 : CreateTaskEditor {}
        
        Rectangle {}
    }

    query_finished(newInfo) => {
        CardInfo = newInfo;
        isQuerying = false;
        isShowingInfo = true;
    }

    
    if index == 1 : FloatingActionButton {
        text: "Create";
        icon: FilledIcons.add;
        style: standard;
        x: parent.width - self.width - 16px;
        y: parent.height - self.height - 16px;
        clicked => {
            // showDialog();
        }
    }
    
}
